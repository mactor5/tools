name: Deploy Downloader

on:
  workflow_dispatch:
    inputs:
      download_url:
        description: '文件URL'
        required: true
        default: 'https://releases.ubuntu.com/24.04.2/ubuntu-24.04.2-live-server-amd64.iso'
      clean_switch:
        description: '是否扩容磁盘'
        required: true
        default: '否'
        type: choice
        options:
          - "是"
          - "否"

jobs:
  Server:
    runs-on: ubuntu-latest
    steps:
      - name: 最大化磁盘空间
        if: ${{ github.event.inputs.clean_switch == '否' }}
        uses: easimon/maximize-build-space@master
        with:
          overprovision-lvm: 'true'
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'


      - name: 迁出代码
        uses: actions/checkout@v3
        
      - name: 检查服务器配置
        id: check_server
        run: |
          echo -e "已知CPU型号(性能降序): 7763，8370C，8272CL，8171M，E5-2673\n"
          echo "--------------------------CPU信息--------------------------"
          echo "CPU物理数量: $(cat /proc/cpuinfo | grep 'physical id' | sort | uniq | wc -l)"
          echo "CPU核心数量: $(nproc)"
          echo -e "CPU型号信息:$(cat /proc/cpuinfo | grep -m1 name | awk -F: '{print $2}')\n"
          echo "--------------------------内存信息--------------------------"
          echo "已安装内存详细信息:"
          echo -e "$(sudo lshw -short -C memory | grep GiB)\n"
          echo "--------------------------硬盘信息--------------------------"
          echo "硬盘数量: $(ls /dev/sd* | grep -v [1-9] | wc -l)" && df -hT
          echo "--------------------------网络信息--------------------------"
          curl -s -4 ipinfo.io > raw_net_info
          cat raw_net_info | jq -r '
            "IP地址           \(.ip)\n" +
            "所在城市         \(.city)\n" +
            "所在区域         \(.region)\n" +
            "国家             \(.country)\n" +
            "地理位置         \(.loc)\n" +
            "组织             \(.org)\n" +
            "邮政编码         \(.postal)\n" +
            "所在时区         \(.timezone)\n"' 

          echo "public_ip=$(cat raw_net_info | jq -r '.ip')" >> $GITHUB_OUTPUT
          echo "city=$(cat raw_net_info | jq -r '.city')" >> $GITHUB_OUTPUT
          echo "region=$(cat raw_net_info | jq -r '.region')" >> $GITHUB_OUTPUT
          echo "country=$(cat raw_net_info | jq -r '.country')" >> $GITHUB_OUTPUT
          echo "loc=$(cat raw_net_info | jq -r '.loc')" >> $GITHUB_OUTPUT
          echo "org=$(cat raw_net_info | jq -r '.org')" >> $GITHUB_OUTPUT
          echo "postal=$(cat raw_net_info | jq -r '.postal')" >> $GITHUB_OUTPUT
          echo "timezone=$(cat raw_net_info | jq -r '.timezone')" >> $GITHUB_OUTPUT

      - name: 开始下载
        run: |
          mkdir upload
          echo "上传文件目录: $(pwd)/upload"
          cd upload
          aria2c ${{ github.event.inputs.download_url }}
            
      - name: 上传文件
        id: upload
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: my-artifact
          path: upload

      - name: 发送 Telegram 通知
        run: |
          # 获取当前时间（UTC+8 时区，北京时间）
          current_time=$(date -u +"%Y-%m-%d %H:%M:%S" -d "8 hour")

          # 构造 Telegram 消息
          message=$(cat <<EOF
          <b>🚀 文件下载成功 🎉</b>

          🖥️ <b>公网 IP:</b> <code>${{ steps.check_server.outputs.public_ip }}</code>  
          🏙️ <b>城市:</b> <code>${{ steps.check_server.outputs.city }}</code>  
          🌍 <b>区域:</b> <code>${{ steps.check_server.outputs.region }}</code>  
          🗺️ <b>国家:</b> <code>${{ steps.check_server.outputs.country }}</code>  
          📍 <b>地理位置:</b> <code>${{ steps.check_server.outputs.loc }}</code>  
          🏢 <b>组织:</b> <code>${{ steps.check_server.outputs.org }}</code>  
          📮 <b>邮政编码:</b> <code>${{ steps.check_server.outputs.postal }}</code>  
          ⏰ <b>时区:</b> <code>${{ steps.check_server.outputs.timezone }}</code>  

            📂 <b>文件大小:</b> <b>$(du -sh upload | awk '{print $1}')   </b><a href="${{ steps.upload.outputs.artifact-url }}">点击下载</a>

          🕒 <b>当前时间:</b> <code>$current_time</code>  
          EOF
          )

          # 进行 URL 编码
          message=$(echo "$message" | jq -sRr @uri)

          # 发送 Telegram 消息
          curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
               -d "chat_id=${{ secrets.TELEGRAM_TO }}" \
               -d "parse_mode=HTML" \
               -d "text=$message"

